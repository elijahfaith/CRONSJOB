name: Monitor DockerHub Repositories

on:
  push:
    branches:
      - master
  schedule:
    # Runs the job at the specified times (UTC)
    - cron: "0 * * * *" # Every hour
  workflow_dispatch: # Allows manual trigger of the workflow

jobs:
  monitor-dockerhub:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Hub CLI
        run: |
          curl -L https://github.com/rofrischmann/docker-hub-cli/releases/latest/download/docker-hub-cli-linux -o dockerhub
          chmod +x dockerhub
          sudo mv dockerhub /usr/local/bin/

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set execute permissions for the script
        run: chmod +x ./monitor_dockerhub.sh

      - name: Show monitor_dockerhub.sh contents
        run: cat ./monitor_dockerhub.sh

      - name: Run monitoring script
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          ./monitor_dockerhub.sh

      - name: Upload DockerHub Logs CSV
        uses: actions/upload-artifact@v3
        with:
          name: dockerhub-logs
          path: ./dockerhub_logs.csv

      - name: Send email with attachment
        run: |
          LATEST_CSV=$(ls -t dockerhub_logs_*.csv | head -n 1)
          echo "Sending email with attachment: $LATEST_CSV"   
          python send_email.py "$LATEST_CSV"
        env:
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
